name: Configure Nginx webservers via Ansible
on:
  workflow_call:
    inputs:
      runner:
        type: string
        required: false
        default: ubuntu-latest
        description: The Github action runner OS , on which the action runs.
      playbook:
        type: string
        required: true
        description: The playbook file which needs to be applied via ansible.
      inventory:
        type: string
        required: false
        default: my.azure_rm.yaml
        description: The inventory file which will be used by ansible.

    secrets:
      ssh-private-key:
        required: true

jobs:
  configureWebservers:
    name: Configure Linux VM as Nginx Webservers via Ansible
    runs-on: "${{ inputs.runner }}"
    steps:
      - name: checkout the repository
        uses: actions/checkout@v3

      ## https://github.com/Homebrew/actions/tree/master/setup-homebrew
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

        ## https://github.com/ansible/ansible/issues/80526
      - name: Install Ansible
        shell: bash
        run: |
          export LC_ALL=en_US.UTF-8
          brew install ansible
          pip3 install msrest -I
          ansible-galaxy collection install azure.azcollection
          pip3 install -r ~/.ansible/collections/ansible_collections/azure/azcollection/requirements-azure.txt

      - name: Add private key to SSH Agent
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.ssh-private-key}}

      - name: Run ansible playbook
        shell: bash
        working-directory: ${{ github.workspace }}/ansible
        run: |-
            ansible-playbook ${{ inputs.playbook }} -i ${{ inputs.inventory }}
        env:
          AZURE_CLIENT_ID:  ${{ secrets.ARM_CLIENT_ID }}
          AZURE_SECRET:  ${{ secrets.ARM_CLIENT_SECRET }}
          AZURE_TENANT: ${{ secrets.ARM_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
